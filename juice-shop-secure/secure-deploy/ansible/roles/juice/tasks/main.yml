---
# 🛑 Nettoyer les installations précédentes
- name: 🛑 Arrêter conteneur Juice Shop existant
  docker_container:
    name: juice-shop
    state: absent
    force_kill: yes
  become: yes
  ignore_errors: yes

# 🌐 Créer réseau Docker pour Juice Shop
- name: 🌐 Créer réseau Docker
  docker_network:
    name: "{{ juice_shop_network }}"
    driver: bridge
    state: present
  become: yes

# ⛓ Télécharger image Juice Shop avec retry
- name: ⛓ Télécharger image Juice Shop
  docker_image:
    name: "{{ juice_shop_image }}"
    tag: "{{ juice_shop_version }}"
    source: pull
    timeout: 300  # 5 minutes
  become: yes
  retries: 3
  delay: 30
  register: pull_result
  until: pull_result is succeeded

# 🚀 Lancer conteneur Juice Shop
- name: 🚀 Lancer conteneur Juice Shop
  docker_container:
    name: juice-shop
    image: "{{ juice_shop_image }}:{{ juice_shop_version }}"
    state: started
    restart_policy: unless-stopped
    published_ports:
      - "{{ juice_shop_external_port }}:{{ juice_shop_internal_port }}"
    networks:
      - name: "{{ juice_shop_network }}"
    env:
      NODE_ENV: production
      PORT: "{{ juice_shop_internal_port | string }}"
      # Désactiver le chatbot problématique
      APPLICATION_CHATBOT: "false"
      CHATBOT_TRAINING_DATA: ""
      SOLUTIONS_WEBHOOK: ""
    # Limitations de ressources
    memory: 512m
    memory_swap: 512m
    cpu_quota: 50000  # 50% d'un CPU
    # Sécurité
    security_opts:
      - "no-new-privileges:true"
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
  become: yes
  register: juice_container

# ✅ Vérifier que Juice Shop démarre
- name: ⏳ Attendre que Juice Shop soit prêt
  uri:
    url: "http://localhost:{{ juice_shop_external_port }}"
    method: GET
    status_code: 200
  register: juice_health
  until: juice_health.status == 200
  retries: 30
  delay: 5
  ignore_errors: yes

# 📋 Afficher le statut
- name: 📋 Statut de Juice Shop
  debug:
    msg: |
      {% if juice_health.status == 200 %}
      ✅ Juice Shop disponible sur http://localhost:{{ juice_shop_external_port }}
      {% else %}
      ❌ Juice Shop non accessible - vérifier les logs : docker logs juice-shop
      {% endif %}

# 🔍 Logs en cas de problème
- name: 🔍 Afficher logs si problème
  shell: docker logs --tail 20 juice-shop
  register: juice_logs
  become: yes
  when: juice_health.status != 200

- name: 📋 Logs de débogage
  debug:
    msg: "{{ juice_logs.stdout_lines }}"
  when: 
    - juice_health is failed or (juice_health.status is defined and juice_health.status != 200)
    - juice_logs is defined
    - juice_logs.stdout_lines is defined