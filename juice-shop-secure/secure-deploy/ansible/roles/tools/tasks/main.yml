# ===================================================================
# R√îLE TRIVY SCANNER - ANALYSE DE VULN√âRABILIT√âS DES IMAGES DOCKER
# ===================================================================
#
# Ce r√¥le installe et utilise Trivy pour scanner les vuln√©rabilit√©s
# de s√©curit√© dans l'image Docker de Juice Shop.
#
# OBJECTIF :
# Identifier les vuln√©rabilit√©s connues dans l'image bkimminich/juice-shop
# pour √©valuer le niveau de risque et documenter les failles pr√©sentes.
#
# POURQUOI TRIVY :
# - Scanner gratuit et open-source d'Aqua Security
# - Base de donn√©es de vuln√©rabilit√©s constamment mise √† jour
# - Support complet des images Docker et formats OCI
# - Rapports d√©taill√©s par niveau de gravit√© (LOW, MEDIUM, HIGH, CRITICAL)
# - Outil standard de l'industrie pour la s√©curit√© des containers

---
# T√©l√©charger l'ex√©cutable Trivy depuis GitHub Releases
# Version 0.51.1 choisie car stable et r√©cente au moment du d√©veloppement
# T√©l√©chargement en tant qu'utilisateur normal pour √©viter les privil√®ges root inutiles
- name: T√©l√©charger Trivy
  get_url:
    url: https://github.com/aquasecurity/trivy/releases/download/v0.51.1/trivy_0.51.1_Linux-64bit.tar.gz
    dest: /tmp/trivy.tar.gz
    mode: '0644'              # Lecture par tous, pas d'ex√©cution sur l'archive
  register: trivy_download
  retries: 3                  # 3 tentatives car le t√©l√©chargement peut √©chouer (r√©seau)
  delay: 5                    # 5 secondes entre chaque tentative
  until: trivy_download is succeeded
  become: false              # Pas besoin de privil√®ges root pour t√©l√©charger
  tags: trivy

# V√©rifier que le t√©l√©chargement s'est bien pass√©
# Cette v√©rification √©vite les erreurs si le fichier est corrompu ou absent
- name: V√©rifier existence du fichier t√©l√©charg√©
  stat:
    path: /tmp/trivy.tar.gz
  register: trivy_file
  tags: trivy

# Extraire l'archive TAR.GZ dans /tmp
# L'extraction ne se fait que si le fichier existe vraiment
# -xzf : eXtract, gZip, File - options standard pour tar.gz
- name: Extraire Trivy
  shell: tar -xzf /tmp/trivy.tar.gz -C /tmp/
  args:
    executable: /bin/bash      # Utilise bash explicitement pour plus de fiabilit√©
  when: trivy_file.stat.exists # Condition : seulement si le fichier existe
  tags: trivy

# D√©placer l'ex√©cutable dans le PATH syst√®me
# /usr/local/bin est l'emplacement standard pour les binaires install√©s manuellement
# Mode 755 permet l'ex√©cution par tous les utilisateurs
- name: D√©placer Trivy dans /usr/local/bin
  copy:
    src: "/tmp/trivy"          # Source : fichier extrait dans /tmp
    dest: "/usr/local/bin/trivy"  # Destination : r√©pertoire dans le PATH
    mode: '0755'               # Ex√©cutable par tous
    remote_src: yes            # Source sur la machine distante (pas locale Ansible)
  become: yes                  # Privil√®ges root n√©cessaires pour √©crire dans /usr/local/bin
  tags: trivy

# V√©rifier que Trivy fonctionne correctement apr√®s installation
# Cette commande confirme que l'installation s'est bien pass√©e
- name: V√©rifier installation de Trivy
  command: trivy --version
  register: trivy_version
  changed_when: false          # Commande de lecture, pas de modification syst√®me
  tags: trivy

# Afficher la version install√©e pour tra√ßabilit√©
- name: Afficher version Trivy
  debug:
    var: trivy_version.stdout
  tags: trivy

# Scanner l'image Juice Shop et g√©n√©rer un rapport de vuln√©rabilit√©s
# Ce scan identifie toutes les vuln√©rabilit√©s HIGH et CRITICAL dans l'image
# IMPORTANT : Pas de commentaires inline dans la commande car cela casse la syntaxe shell
- name: Scanner Juice Shop avec Trivy et g√©n√©rer rapport
  shell: |
    echo "=== RAPPORT TRIVY - ANALYSE VULNERABILITES JUICE SHOP ===" > /home/vagrant/trivy-report.txt
    echo "Date du scan: $(date)" >> /home/vagrant/trivy-report.txt
    echo "Image analys√©e: bkimminich/juice-shop" >> /home/vagrant/trivy-report.txt
    echo "Seuil de gravit√©: HIGH,CRITICAL" >> /home/vagrant/trivy-report.txt
    echo "" >> /home/vagrant/trivy-report.txt
    
    # Configuration du scan Trivy :
    # --severity HIGH,CRITICAL : Seulement les vuln√©rabilit√©s graves
    # --format table : Format tableau lisible pour humains
    # --no-progress : Pas de barre de progression dans le rapport
    # --ignore-unfixed : Ignore les vuln√©rabilit√©s sans correctif disponible
    /usr/local/bin/trivy image --severity HIGH,CRITICAL --format table --no-progress --ignore-unfixed bkimminich/juice-shop >> /home/vagrant/trivy-report.txt 2>&1
  args:
    executable: /bin/bash
  changed_when: false            # Le scan ne modifie pas le syst√®me
  become: yes                    # N√©cessaire pour √©crire dans /home/vagrant
  tags: trivy

# Afficher un r√©sum√© du scan pour info imm√©diate
- name: Afficher r√©sum√© du scan Trivy
  shell: |
    echo "=== R√âSUM√â DU SCAN TRIVY ==="
    echo "Rapport complet disponible : /home/vagrant/trivy-report.txt"
    echo ""
    # Compter les vuln√©rabilit√©s trouv√©es
    critical_count=$(grep -c "CRITICAL" /home/vagrant/trivy-report.txt || echo "0")
    high_count=$(grep -c "HIGH" /home/vagrant/trivy-report.txt || echo "0")
    echo "Vuln√©rabilit√©s CRITICAL trouv√©es : $critical_count"
    echo "Vuln√©rabilit√©s HIGH trouv√©es : $high_count"
    echo ""
    if [ "$critical_count" -gt 0 ] || [ "$high_count" -gt 0 ]; then
      echo "‚ö†Ô∏è  ATTENTION: Vuln√©rabilit√©s d√©tect√©es dans l'image Juice Shop"
      echo "üìã Consulter le rapport d√©taill√© pour les d√©tails"
    else
      echo "‚úÖ Aucune vuln√©rabilit√© HIGH/CRITICAL d√©tect√©e"
    fi
  register: scan_summary
  changed_when: false
  tags: trivy

- name: Rapport scan de vuln√©rabilit√©s
  debug:
    msg: "{{ scan_summary.stdout_lines }}"
  tags: trivy