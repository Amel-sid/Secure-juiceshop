---
# ===================== SECTION 1: CONFIGURATION RÉSEAU =====================
- name: 🔒 CONFIGURATION PAREFEUX (ISO 27001 A.13.1.1)
  block:
    - name: ✨ Activer UFW avec politique restrictive
      ufw:
        state: enabled
        policy: deny
        logging: medium

    # COMMENTÉ - Cause problème SSH Vagrant
    # - name: 🔒 Autoriser SSH depuis IP admin
    #   ufw:
    #     rule: allow
    #     port: "{{ ssh_port }}"
    #     proto: tcp
    #     src: "{{ admin_ip }}/32"

    # AJOUTÉ - Autoriser SSH pour Vagrant
    - name: 🔒 Autoriser SSH Vagrant
      ufw:
        rule: allow
        port: 22
        proto: tcp

    - name: 🚫 Bloquer accès direct à Juice Shop
      ufw:
        rule: deny
        port: 3000
        proto: tcp

    - name: 🌐 Autoriser HTTPS
      ufw:
        rule: allow
        port: 443
        proto: tcp

    - name: 🌐 Autoriser HTTP
      ufw:
        rule: allow
        port: 80
        proto: tcp
  tags: ["firewall"]

# ===================== SECTION 2: DURCISSEMENT SSH =====================
- name: 🔐 DURCISSEMENT SSH (ISO 27001 A.9.4.2)
  block:
    # COMMENTÉ - Cause problème port SSH
    # - name: 🔧 Changer port SSH
    #   lineinfile:
    #     path: /etc/ssh/sshd_config
    #     regexp: '^#?Port'
    #     line: 'Port {{ ssh_port }}'
    #     backup: yes
    #     validate: '/usr/sbin/sshd -t -f %s'

    # COMMENTÉ - Cause problème authentification Vagrant
    # - name: 🔑 Forcer authentification par clé
    #   lineinfile:
    #     path: /etc/ssh/sshd_config
    #     regexp: '^#?AuthenticationMethods'
    #     line: 'AuthenticationMethods publickey'
    #     validate: '/usr/sbin/sshd -t -f %s'

    - name: ⏱ Limiter tentatives de connexion
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?MaxAuthTries'
        line: 'MaxAuthTries 3'
        validate: '/usr/sbin/sshd -t -f %s'

    - name: ⛔ Désactiver options dangereuses
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?{{ item.key }}'
        line: '{{ item.value }}'
        validate: '/usr/sbin/sshd -t -f %s'
      loop:
        - { key: 'X11Forwarding', value: 'X11Forwarding no' }
        - { key: 'AllowTcpForwarding', value: 'AllowTcpForwarding no' }
        - { key: 'PermitTunnel', value: 'PermitTunnel no' }
        - { key: 'ClientAliveInterval', value: 'ClientAliveInterval 300' }
        - { key: 'ClientAliveCountMax', value: 'ClientAliveCountMax 2' }

    - name: 🔄 Redémarrer SSH
      systemd:
        name: ssh
        state: restarted
  tags: ["ssh"]

# ===================== SECTION 3: OUTILS DE SÉCURITÉ =====================
- name: 🛡️ OUTILS DE PROTECTION (ISO 27001 A.12.6)
  block:
    # ----- SOUS-SECTION: Fail2Ban -----
    - name: 🛡 Installer et configurer Fail2Ban
      block:
        - name: 📦 Installer Fail2Ban
          apt:
            name: fail2ban
            state: present

        - name: 🔧 Configurer jail SSH
          copy:
            dest: /etc/fail2ban/jail.d/sshd.conf
            content: |
              [sshd]
              enabled = true
              port = 22
              filter = sshd
              logpath = /var/log/auth.log
              maxretry = 3
              bantime = 1h
              findtime = 10m
              ignoreip = 127.0.0.1/8 10.0.0.0/8 192.168.0.0/16

        - name: 🔧 Configurer jail Nginx
          copy:
            dest: /etc/fail2ban/jail.d/nginx.conf
            content: |
              [nginx-http-auth]
              enabled = true
              port = http,https
              logpath = /var/log/nginx/error.log
              maxretry = 3
          notify: restart fail2ban
      
    # ----- SOUS-SECTION: AppArmor -----
    - name: 🛡 Installer et activer AppArmor
      block:
        - name: 📦 Installer AppArmor
          apt:
            name:
              - apparmor
              - apparmor-utils
              - apparmor-profiles
            state: present
            update_cache: no

        - name: 🔄 Activer AppArmor
          service:
            name: apparmor
            state: started
            enabled: true

        - name: 🔒 Appliquer profil Docker
          copy:
            dest: /etc/apparmor.d/docker
            content: |
              #include <tunables/global>
              profile docker flags=(attach_disconnected) {
                deny /etc/passwd rw,
                deny /etc/shadow rw,
                deny /root/** rw,
                capability dac_override,
              }
          notify: reload apparmor
      
    # ----- SOUS-SECTION: Mises à jour -----
    - name: ♻️ Activer mises à jour automatiques
      apt:
        name: unattended-upgrades
        state: present
  tags: ["security-tools"]